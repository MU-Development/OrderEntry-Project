/** This is the API for the Frequent Guest Module of the Order Entry Project. */

// The framework for this module will be setup once we go over how the different modules will interact in class on Wednesday (4/11/18).

// There should be a couple of parts for this module as listed below:
// 1) There should be an option in the main GUI to select a button for recent guest login/"check-in". This would open a new GUI that prompts the user for their username/password (if implemented). 
// 2) There are a couple ways to handle the actual implementation of the frequent guest class/module. New arrays or array lists could be created to maintain a database of orders from people who have guest ID numbers. ID number could be assigned to user ids, to make searching the database easier. If new arrays or arrayslists are used to maintain tracking of the various user's purchases, then calls to the references of the item list and order history would be required to pull the required data. The order history would be the key list to pull so that a ID number or guest ID could be attached to each purchase. The item list could be pulled to suggest other items other buyers have purchased to influence reccomended food options (marketing).
// 3) The selection of food/drink can be saved to a temporary list to be passed into the order class to place the order, or another option could be presented to add items not previously ordered from the item list/normal order screen.
// 4) We should determine if this frequent guest functionalilty only allows a guest to do a quick re-order, or allows them to select previously ordered things, while also adding other items.
// 5) The ID creation should occur AFTER the order is placed with a prompt to ask the user to create a frequent order ID. This will allow the first order to be stored to their ID. When they re-visit, they can type in their ID and pull up their last order, or possibly their frequently ordered items.

// 6) The guest login could use a password as well. This option could be implemented in a future revision of the Order Entry Project - Frequent Guest Module.

// 7) Once the extent of what is expected in this API is laid out in class, and the other module's interfaces are defined, this API can be updated to reflect how this module will be created, and ultimately implemented and used.

// End API.


